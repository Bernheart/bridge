import 'package:bridge_game/src/enums/direction.dart';

enum Vulnerability {
  vulnerable,
  notVulnerable;

  bool isVulnerable() {
    switch (this) {
      case Vulnerability.vulnerable:
        return true;
      case Vulnerability.notVulnerable:
        return false;
    }
  }

  int ifVulnerable(int x, int y) {
    switch (this) {
      case Vulnerability.vulnerable:
        return x;
      case Vulnerability.notVulnerable:
        return y;
    }
  }

  static Vulnerability boolToVul(bool isVul) {
    switch (isVul) {
      case true:
        return vulnerable;
      case false:
        return notVulnerable;
    }
  }

  static Map<int, List<Direction>> boardVulnerability = {
    1: [],
    2: [Direction.north, Direction.south],
    3: [Direction.east, Direction.west],
    4: [Direction.north, Direction.south, Direction.east, Direction.west]
  };

  static Vulnerability getBoardVulnerability(
      int boardNumber, Direction player) {
    // przesuniecie
    int sequenceShift = ((boardNumber - 1) ~/ 4);

    // ktore ustawienie zalozen
    int boardIndex = (boardNumber + sequenceShift - 1) % 4 + 1;

    // czy jest po w tych zalozeniach
    bool isVul = boardVulnerability[boardIndex]?.contains(player) ?? false;

    // zwrot Vulnerability
    return boolToVul(isVul);
  }

  static String getBoardVulnerabilityString(int boardNumber) {
    if (getBoardVulnerability(boardNumber, Direction.north) ==
            Vulnerability.notVulnerable &&
        getBoardVulnerability(boardNumber, Direction.east) ==
            Vulnerability.notVulnerable) return "None";
    if (getBoardVulnerability(boardNumber, Direction.north) ==
            Vulnerability.vulnerable &&
        getBoardVulnerability(boardNumber, Direction.east) ==
            Vulnerability.notVulnerable) return "NS";
    if (getBoardVulnerability(boardNumber, Direction.north) ==
            Vulnerability.notVulnerable &&
        getBoardVulnerability(boardNumber, Direction.east) ==
            Vulnerability.vulnerable) return "EW";
    return "Both";
  }
}
